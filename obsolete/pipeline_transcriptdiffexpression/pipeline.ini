################################################################
#
#
# Pipeline pipeline_transcriptdiffexpression.py configuration file for sphinxreport
#
# This pipeline.ini file lists some configuration options that you might 
# want a user to set automatically.
#
# Add pipeline specific options into separate sections
#
################################################################
## general options
[general]

# the genome to use (UCSC convention)
genome=hg38

# location of indexed genome, needs to be set
genome_dir=/ifs/mirror/genomes/faidx
  
# Project name
projectname=CGATProject

# Copyright statement
copyright=CGAT (2010-2014)

# The short X.Y version.
version=0.1

# The full version, including alpha/beta/rc tags.
release=0.1

# directory for publishing results on the web
web_dir=../web

# comma-separated list of tools for alignment-free quantification
# e.g kallisto,salmon
# available tools are:
# kallisto
# salmon
# sailfish  
quantifiers=kallisto

database=csvdb  

################################################################
#
# Location of annotation database
#
################################################################
[annotations]
database=/ifs/mirror/annotations/hg38_ensembl82/csvdb

# directory with annotation information
dir=/ifs/mirror/annotations/hg38_ensembl82


################################################################
#
# geneset options
#
################################################################
[geneset]

# generate a geneset from the annotations pipeline ensembl geneset
# If set to 0, you must provide your own geneset in a 'geneset.fa' file  
auto_generate=1

# run sqlite3 csvdb "select distinct gene_biotype,transcript_biotype from transcript_info "
# to check the available gene and transcript biotypes

# define the gene_biotypes to retain in the transcripts index
# as a comma seperated list. You must include at least one valid gene_biotype
# gene_biotypes=protein_coding,pseudogene
gene_biotypes=protein_coding,pseudogene

# define the transcript_biotypes to retain in the transcripts index
# as a comma seperated list  (leave empty for no filtering)
# transcript_biotypes=protein_coding,nonsense_mediated_decay,TEC,antisense,lincRNA,non_stop_decay,processed_transcript,retained_intron
transcript_biotypes=

# define a minimum support level (Ensembl TSL)
# leave empty for no filtering
# transcript_support=3
transcript_support=

# instead of filtering out transcripts based on support level,
# randomly remove the same number of transcripts that would be
# removed based on the transcript support filter above.
# This is in place for simulation testing purposes only!
random_removal=0
################################################################
#
# simulation options
#
################################################################
[simulation]
# if set to 0, simulation wont be run
run=1
  
# Some tools, e.g Salmon but not Kallisto, require reads to be
# randomly ordered for the simulation. By default reads are therefore
# randomly shuffled (this takes extra time)
random=1

#number of iterations
iterations=20

# read length
read_length=100

# paired end reads
paired=1

# mean insert size. Insert size should not include read length.
# E.g. 300 bp fragment, 75bp paired end = 150bp insert
insert_mean=0

# insert size standard deviation
insert_sd=10

# Range for number of copies per transcript
copies_min=0
copies_max=10

# sequence error rate (Phred score)
phred=30

# kmer counting memory usage - this is quite hard to estimate! 150000
# transcripts, with 31mer is about 15G! Longer kmer = more memory.
kmer_memory=20G

bootstrap=0

# fraction of transcripts which should be pre-mRNA, e.g contain all introns
# if set to >0 and not autogenerating the geneset, you must have a 'geneset_pre_mRNA.fa'
# file in the the working directory  
pre_mrna_fraction=0

# for analysis of simulation results, transcripts are binned on their
# proportion unique kmers. The bins default to 0-100 in steps of 1
# The step size can be changed here
bin_step=1  
################################################################
#
# merge options
#
################################################################
[merge]
# input pattern
# For example, if your files are called:
#    CLLP80-S1-1-L001.fastq.1.gz
#    CLLP80-S1-1-L001.fastq.2.gz
#    CLLP80-S1-1-L002.fastq.1.gz
#    CLLP80-S1-1-L002.fastq.2.gz
# and you want to create the following files:
#    CLLP80-S1-1.quant
#
# choose the following input and output patterns:
#
# pattern_input=(.*)-(S\d)-(\d)-(L\d+)
# pattern_output=\1-\2-\3
# Note that the .quant will be added by the pipeline. The
# pattern must not include this.
pattern_input=
pattern_output=


################################################################
#
# kallisto options
#
################################################################
[kallisto]
# kmer size for kallisto. Default is 31. Max is 31.
kmer=31

threads=1

# optional arguments include:
# --bias
# --rf-stranded (check manual for strandedness details)
options=

# fragment-length/sd required for single-end reads only
fragment_length=180

fragment_sd=20
  
# number of bootstrap samples. Note, you need to bootstrap for
# differential expression with sleuth if there are no technical
# replicates. If you only need point estimates, set to 1
# note that bootstrap must be set to at least 1>>>>>>> master
bootstrap=100

# output a "psuedobam" along with the quantification
psuedobam=0

################################################################
#
# salmon options
#
################################################################
[salmon]

# see `salmon quant --help` for explanation of library types
# ISF == fr-secondstrand in tophat
libtype=ISF

# optional arguments include:
# --extraSensitive
options=

kmer=31

# use the bias correction option?  
bias_correct=0  

# number of bootstrap samples
# Note: you need to bootstrap for differential expression with sleuth
# if there are no technical replicates
bootstrap=100

# from salmon >= v0.5.0, an index type is required
# specify one of --type=fmd or --type=quasi
index_options=--type=fmd

threads=1
################################################################
#
# sailfish options
#
################################################################
[sailfish]

# see `sailfish quant --help` for explanation of library types
# ISF == fr-secondstrand in tophat
libtype=ISF

# optional arguments include:
# --biasCorrect
options=

# optional arguments for indexing include:
# --force, --threads N (default=4)
index_options=

kmer=31

# number of bootstrap samples
# Note: you need to bootstrap for differential expression with sleuth
# if there are no technical replicates
bootstrap=100

threads=1

################################################################
#
# sleuth options
#
################################################################
[sleuth]

# GLM models for differential testing need to be specified seperately
# for each *design.tsv file using model_[design_prefix] format
# e.g two design files test1.design.tsv and test2.design.tsv
# model_test1 = ~group+replicate
# model_test2 = ~group+condition

model_test1=~group

# contrast for differential testing need to be specified seperately
# for each *design.tsv file using contrast_[design_prefix] format
# e.g two design files full.design.tsv and subset.design.tsv
# contrast_test1 = group
# contrast_test2 = condition

contrasts_test1=group

fdr=0.1

# set to 1 to perform gene-level as well as transcript-level
# differential expression analysis
genewise=1

# ensembl gene biomart for genewise quantification aggregation purposes.
# Note, the pipeline cannot currently handle genewise DE testing if the transcripts/genes
# are not in ensembl
# Use following R code to identify the correct database
# (e.g hsapiens_gene_ensembl)
# > library(biomaRt)
# > listDatasets(useEnsembl(biomart="ensembl"))  
gene_biomart=hsapiens_gene_ensembl  
################################################################
#
# deseq2 options
#
################################################################
[deseq2]

# GLM models for differential testing need to be specified seperately
# for each *design.tsv file using model_[design_prefix] format
# e.g two design files test1.design.tsv and test2.design.tsv
# model_test1 = ~group+replicate
# model_test2 = ~group+condition

model_test1=~group

# contrast for differential testing need to be specified seperately
# for each *design.tsv file using contrast_[design_prefix] format
# multiple contrasts can be seperated by commas
# E.g two design files test1.design.tsv and test2.design.tsv
# contrast_test1 = group
# contrast_test2 = group,condition

contrasts_test1=group

# reference group for differential tesing. If left blank, deseq2 will
# take the first factor from the column specified by the constrast
# e.g test 0 vs. 1 or No vs. Yes
# ref_group_test1=0
# ref_group_test2=No

ref_group_test1=
  
fdr=0.1  

# set to 1 to use independent hypothesis weighting for FRD (IGNATIADIS et al (2016))
ihw=0
  
################################################################
#
# sphinxreport build options
#
################################################################
[report]

# prefix to use for publishing the report from this pipeline
prefix=default

[report]
# number of threads to use to build the documentation
threads=10

# directory for html documentation
html=report/html

# directory for doctrees
doctrees=report/doctrees

# prefix for publishing
prefix=default

# report generator to use
engine=cgatreport 
